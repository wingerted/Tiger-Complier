State 1 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 decList: dec
    2        | decList dec

    3 dec: nametyList
    4    | vardec
    5    | fundecList

    6 nametyList: namety
    7           | nametyList namety

    8 fundecList: fundec
    9           | fundecList fundec

   10 namety: TYPE ID EQ ty

   11 ty: ID
   12   | LBRACE fieldList RBRACE
   13   | ARRAY OF ID

   14 fieldList: field
   15          | fieldList COMMA field

   16 field: ID COLON ID

   17 efieldlist: efield
   18           | efieldlist COMMA efield

   19 efield: ID EQ exp

   20 vardec: VAR ID ASSIGN exp
   21       | VAR ID COLON ID ASSIGN exp

   22 fundec: FUNCTION ID LPAREN fieldList RPAREN EQ exp
   23       | FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp

   24 var: ID
   25    | var DOT ID
   26    | var LBRACK exp RBRACK

   27 program: exp

   28 explist: exp
   29        | explist COMMA exp

   30 exp: INT
   31    | STRING
   32    | var
   33    | NIL
   34    | LPAREN expseq RPAREN
   35    | ID LPAREN explist RPAREN
   36    | MINUS exp
   37    | exp PLUS exp
   38    | exp MINUS exp
   39    | exp TIMES exp
   40    | exp DIVIDE exp
   41    | exp AND exp
   42    | exp OR exp
   43    | exp EQ exp
   44    | exp NEQ exp
   45    | exp LT exp
   46    | exp LE exp
   47    | exp GT exp
   48    | exp GE exp
   49    | ID LBRACE efieldlist RBRACE
   50    | ID LBRACK exp RBRACK OF exp
   51    | var ASSIGN exp
   52    | LET decList IN expseq END
   53    | IF exp THEN exp
   54    | IF exp THEN exp ELSE exp
   55    | WHILE exp DO exp
   56    | FOR ID ASSIGN exp TO exp DO exp
   57    | BREAK

   58 expseq: /* empty */
   59       | explist
   60       | explist SEMICOLON expseq


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 10 11 13 16 19 20 21 22 23 24 25 35 49 50 56
STRING (259) 31
INT (260) 30
COMMA (261) 15 18 29
COLON (262) 16 21 23
SEMICOLON (263) 60
LPAREN (264) 22 23 34 35
RPAREN (265) 22 23 34 35
LBRACK (266) 26 50
RBRACK (267) 26 50
LBRACE (268) 12 49
RBRACE (269) 12 49
DOT (270) 25
PLUS (271) 37
MINUS (272) 36 38
TIMES (273) 39
DIVIDE (274) 40
EQ (275) 10 19 22 23 43
NEQ (276) 44
LT (277) 45
LE (278) 46
GT (279) 47
GE (280) 48
AND (281) 41
OR (282) 42
ASSIGN (283) 20 21 51 56
ARRAY (284) 13
IF (285) 53 54
THEN (286) 53 54
ELSE (287) 54
WHILE (288) 55
FOR (289) 56
TO (290) 56
DO (291) 55 56
LET (292) 52
IN (293) 52
END (294) 52
OF (295) 13 50
BREAK (296) 57
NIL (297) 33
FUNCTION (298) 22 23
VAR (299) 20 21
TYPE (300) 10
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
decList (48)
    on left: 1 2, on right: 2 52
dec (49)
    on left: 3 4 5, on right: 1 2
nametyList (50)
    on left: 6 7, on right: 3 7
fundecList (51)
    on left: 8 9, on right: 5 9
namety (52)
    on left: 10, on right: 6 7
ty (53)
    on left: 11 12 13, on right: 10
fieldList (54)
    on left: 14 15, on right: 12 15 22 23
field (55)
    on left: 16, on right: 14 15
efieldlist (56)
    on left: 17 18, on right: 18 49
efield (57)
    on left: 19, on right: 17 18
vardec (58)
    on left: 20 21, on right: 4
fundec (59)
    on left: 22 23, on right: 8 9
var (60)
    on left: 24 25 26, on right: 25 26 32 51
program (61)
    on left: 27, on right: 0
explist (62)
    on left: 28 29, on right: 29 35 59 60
exp (63)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57, on right: 19 20 21 22 23 26 27 28
    29 36 37 38 39 40 41 42 43 44 45 46 47 48 50 51 53 54 55 56
expseq (64)
    on left: 58 59 60, on right: 34 52 60


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var      go to state 12
    program  go to state 13
    exp      go to state 14


state 1

   24 var: ID .
   35 exp: ID . LPAREN explist RPAREN
   49    | ID . LBRACE efieldlist RBRACE
   50    | ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17

    LBRACK    [reduce using rule 24 (var)]
    $default  reduce using rule 24 (var)


state 2

   31 exp: STRING .

    $default  reduce using rule 31 (exp)


state 3

   30 exp: INT .

    $default  reduce using rule 30 (exp)


state 4

   34 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 58 (expseq)

    var      go to state 12
    explist  go to state 18
    exp      go to state 19
    expseq   go to state 20


state 5

   36 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 21


state 6

   53 exp: IF . exp THEN exp
   54    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 22


state 7

   55 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 23


state 8

   56 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 24


state 9

   52 exp: LET . decList IN expseq END

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    decList     go to state 28
    dec         go to state 29
    nametyList  go to state 30
    fundecList  go to state 31
    namety      go to state 32
    vardec      go to state 33
    fundec      go to state 34


state 10

   57 exp: BREAK .

    $default  reduce using rule 57 (exp)


state 11

   33 exp: NIL .

    $default  reduce using rule 33 (exp)


state 12

   25 var: var . DOT ID
   26    | var . LBRACK exp RBRACK
   32 exp: var .
   51    | var . ASSIGN exp

    LBRACK  shift, and go to state 35
    DOT     shift, and go to state 36
    ASSIGN  shift, and go to state 37

    $default  reduce using rule 32 (exp)


state 13

    0 $accept: program . $end

    $end  shift, and go to state 38


state 14

   27 program: exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 27 (program)


state 15

   35 exp: ID LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var      go to state 12
    explist  go to state 51
    exp      go to state 19


state 16

   50 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 52


state 17

   49 exp: ID LBRACE . efieldlist RBRACE

    ID  shift, and go to state 53

    efieldlist  go to state 54
    efield      go to state 55


state 18

   29 explist: explist . COMMA exp
   59 expseq: explist .
   60       | explist . SEMICOLON expseq

    COMMA      shift, and go to state 56
    SEMICOLON  shift, and go to state 57

    $default  reduce using rule 59 (expseq)


state 19

   28 explist: exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 28 (explist)


state 20

   34 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 58


state 21

   36 exp: MINUS exp .
   37    | exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    $default  reduce using rule 36 (exp)


state 22

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   53    | IF exp . THEN exp
   54    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    THEN    shift, and go to state 59


state 23

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   55    | WHILE exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 60


state 24

   56 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 61


state 25

   22 fundec: FUNCTION . ID LPAREN fieldList RPAREN EQ exp
   23       | FUNCTION . ID LPAREN fieldList RPAREN COLON ID EQ exp

    ID  shift, and go to state 62


state 26

   20 vardec: VAR . ID ASSIGN exp
   21       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 63


state 27

   10 namety: TYPE . ID EQ ty

    ID  shift, and go to state 64


state 28

    2 decList: decList . dec
   52 exp: LET decList . IN expseq END

    IN        shift, and go to state 65
    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    dec         go to state 66
    nametyList  go to state 30
    fundecList  go to state 31
    namety      go to state 32
    vardec      go to state 33
    fundec      go to state 34


state 29

    1 decList: dec .

    $default  reduce using rule 1 (decList)


state 30

    3 dec: nametyList .
    7 nametyList: nametyList . namety

    TYPE  shift, and go to state 27

    TYPE      [reduce using rule 3 (dec)]
    $default  reduce using rule 3 (dec)

    namety  go to state 67


state 31

    5 dec: fundecList .
    9 fundecList: fundecList . fundec

    FUNCTION  shift, and go to state 25

    FUNCTION  [reduce using rule 5 (dec)]
    $default  reduce using rule 5 (dec)

    fundec  go to state 68


state 32

    6 nametyList: namety .

    $default  reduce using rule 6 (nametyList)


state 33

    4 dec: vardec .

    $default  reduce using rule 4 (dec)


state 34

    8 fundecList: fundec .

    $default  reduce using rule 8 (fundecList)


state 35

   26 var: var LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 69


state 36

   25 var: var DOT . ID

    ID  shift, and go to state 70


state 37

   51 exp: var ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 71


state 38

    0 $accept: program $end .

    $default  accept


state 39

   37 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 72


state 40

   38 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 73


state 41

   39 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 74


state 42

   40 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 75


state 43

   43 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 76


state 44

   44 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 77


state 45

   45 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 78


state 46

   46 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 79


state 47

   47 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 80


state 48

   48 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 81


state 49

   41 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 82


state 50

   42 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 83


state 51

   29 explist: explist . COMMA exp
   35 exp: ID LPAREN explist . RPAREN

    COMMA   shift, and go to state 56
    RPAREN  shift, and go to state 84


state 52

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   50    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 85
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


state 53

   19 efield: ID . EQ exp

    EQ  shift, and go to state 86


state 54

   18 efieldlist: efieldlist . COMMA efield
   49 exp: ID LBRACE efieldlist . RBRACE

    COMMA   shift, and go to state 87
    RBRACE  shift, and go to state 88


state 55

   17 efieldlist: efield .

    $default  reduce using rule 17 (efieldlist)


state 56

   29 explist: explist COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 89


state 57

   60 expseq: explist SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 58 (expseq)

    var      go to state 12
    explist  go to state 18
    exp      go to state 19
    expseq   go to state 90


state 58

   34 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 34 (exp)


state 59

   53 exp: IF exp THEN . exp
   54    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 91


state 60

   55 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 92


state 61

   56 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 93


state 62

   22 fundec: FUNCTION ID . LPAREN fieldList RPAREN EQ exp
   23       | FUNCTION ID . LPAREN fieldList RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 94


state 63

   20 vardec: VAR ID . ASSIGN exp
   21       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 95
    ASSIGN  shift, and go to state 96


state 64

   10 namety: TYPE ID . EQ ty

    EQ  shift, and go to state 97


state 65

   52 exp: LET decList IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 58 (expseq)

    var      go to state 12
    explist  go to state 18
    exp      go to state 19
    expseq   go to state 98


state 66

    2 decList: decList dec .

    $default  reduce using rule 2 (decList)


state 67

    7 nametyList: nametyList namety .

    $default  reduce using rule 7 (nametyList)


state 68

    9 fundecList: fundecList fundec .

    $default  reduce using rule 9 (fundecList)


state 69

   26 var: var LBRACK exp . RBRACK
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    RBRACK  shift, and go to state 99
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


state 70

   25 var: var DOT ID .

    $default  reduce using rule 25 (var)


state 71

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   51    | var ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 51 (exp)


state 72

   37 exp: exp . PLUS exp
   37    | exp PLUS exp .
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 37 (exp)


state 73

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   38    | exp MINUS exp .
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 38 (exp)


state 74

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   39    | exp TIMES exp .
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    $default  reduce using rule 39 (exp)


state 75

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   40    | exp DIVIDE exp .
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    $default  reduce using rule 40 (exp)


state 76

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   43    | exp EQ exp .
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 43 (exp)


state 77

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   44    | exp NEQ exp .
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 44 (exp)


state 78

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   45    | exp LT exp .
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 45 (exp)


state 79

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   46    | exp LE exp .
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 46 (exp)


state 80

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   47    | exp GT exp .
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 47 (exp)


state 81

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   48    | exp GE exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 48 (exp)


state 82

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   41    | exp AND exp .
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48

    $default  reduce using rule 41 (exp)


state 83

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   42    | exp OR exp .
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49

    $default  reduce using rule 42 (exp)


state 84

   35 exp: ID LPAREN explist RPAREN .

    $default  reduce using rule 35 (exp)


state 85

   50 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 100


state 86

   19 efield: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 101


state 87

   18 efieldlist: efieldlist COMMA . efield

    ID  shift, and go to state 53

    efield  go to state 102


state 88

   49 exp: ID LBRACE efieldlist RBRACE .

    $default  reduce using rule 49 (exp)


state 89

   29 explist: explist COMMA exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 29 (explist)


state 90

   60 expseq: explist SEMICOLON expseq .

    $default  reduce using rule 60 (expseq)


state 91

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   53    | IF exp THEN exp .
   54    | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    ELSE    shift, and go to state 103

    $default  reduce using rule 53 (exp)


state 92

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   55    | WHILE exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 55 (exp)


state 93

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   56    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    TO      shift, and go to state 104


state 94

   22 fundec: FUNCTION ID LPAREN . fieldList RPAREN EQ exp
   23       | FUNCTION ID LPAREN . fieldList RPAREN COLON ID EQ exp

    ID  shift, and go to state 105

    fieldList  go to state 106
    field      go to state 107


state 95

   21 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 108


state 96

   20 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 109


state 97

   10 namety: TYPE ID EQ . ty

    ID      shift, and go to state 110
    LBRACE  shift, and go to state 111
    ARRAY   shift, and go to state 112

    ty  go to state 113


state 98

   52 exp: LET decList IN expseq . END

    END  shift, and go to state 114


state 99

   26 var: var LBRACK exp RBRACK .

    $default  reduce using rule 26 (var)


state 100

   50 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 115


state 101

   19 efield: ID EQ exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 19 (efield)


state 102

   18 efieldlist: efieldlist COMMA efield .

    $default  reduce using rule 18 (efieldlist)


state 103

   54 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 116


state 104

   56 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 117


state 105

   16 field: ID . COLON ID

    COLON  shift, and go to state 118


state 106

   15 fieldList: fieldList . COMMA field
   22 fundec: FUNCTION ID LPAREN fieldList . RPAREN EQ exp
   23       | FUNCTION ID LPAREN fieldList . RPAREN COLON ID EQ exp

    COMMA   shift, and go to state 119
    RPAREN  shift, and go to state 120


state 107

   14 fieldList: field .

    $default  reduce using rule 14 (fieldList)


state 108

   21 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 121


state 109

   20 vardec: VAR ID ASSIGN exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 20 (vardec)


state 110

   11 ty: ID .

    $default  reduce using rule 11 (ty)


state 111

   12 ty: LBRACE . fieldList RBRACE

    ID  shift, and go to state 105

    fieldList  go to state 122
    field      go to state 107


state 112

   13 ty: ARRAY . OF ID

    OF  shift, and go to state 123


state 113

   10 namety: TYPE ID EQ ty .

    $default  reduce using rule 10 (namety)


state 114

   52 exp: LET decList IN expseq END .

    $default  reduce using rule 52 (exp)


state 115

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   50    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 50 (exp)


state 116

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   54    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 54 (exp)


state 117

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   56    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 124


state 118

   16 field: ID COLON . ID

    ID  shift, and go to state 125


state 119

   15 fieldList: fieldList COMMA . field

    ID  shift, and go to state 105

    field  go to state 126


state 120

   22 fundec: FUNCTION ID LPAREN fieldList RPAREN . EQ exp
   23       | FUNCTION ID LPAREN fieldList RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 127
    EQ     shift, and go to state 128


state 121

   21 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 129


state 122

   12 ty: LBRACE fieldList . RBRACE
   15 fieldList: fieldList . COMMA field

    COMMA   shift, and go to state 119
    RBRACE  shift, and go to state 130


state 123

   13 ty: ARRAY OF . ID

    ID  shift, and go to state 131


state 124

   56 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 132


state 125

   16 field: ID COLON ID .

    $default  reduce using rule 16 (field)


state 126

   15 fieldList: fieldList COMMA field .

    $default  reduce using rule 15 (fieldList)


state 127

   23 fundec: FUNCTION ID LPAREN fieldList RPAREN COLON . ID EQ exp

    ID  shift, and go to state 133


state 128

   22 fundec: FUNCTION ID LPAREN fieldList RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 134


state 129

   21 vardec: VAR ID COLON ID ASSIGN exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 21 (vardec)


state 130

   12 ty: LBRACE fieldList RBRACE .

    $default  reduce using rule 12 (ty)


state 131

   13 ty: ARRAY OF ID .

    $default  reduce using rule 13 (ty)


state 132

   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp
   56    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 56 (exp)


state 133

   23 fundec: FUNCTION ID LPAREN fieldList RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 135


state 134

   22 fundec: FUNCTION ID LPAREN fieldList RPAREN EQ exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 22 (fundec)


state 135

   23 fundec: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var  go to state 12
    exp  go to state 136


state 136

   23 fundec: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp .
   37 exp: exp . PLUS exp
   38    | exp . MINUS exp
   39    | exp . TIMES exp
   40    | exp . DIVIDE exp
   41    | exp . AND exp
   42    | exp . OR exp
   43    | exp . EQ exp
   44    | exp . NEQ exp
   45    | exp . LT exp
   46    | exp . LE exp
   47    | exp . GT exp
   48    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 23 (fundec)
